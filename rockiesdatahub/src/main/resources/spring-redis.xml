<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache" 
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	    http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">
	    	    
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="2000" />
        <property name="maxTotal" value="20000" />
        <property name="minEvictableIdleTimeMillis" value="300000"></property>
        <property name="numTestsPerEvictionRun" value="3"></property>
        <property name="timeBetweenEvictionRunsMillis" value="60000"></property>
        <property name="maxWaitMillis" value="20000" />
        <property name="testOnBorrow" value="false" />          
    </bean>
    
    <!-- 在此将sentinel配置集成到redis连接池中 -->
    <bean id="connectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:host-name="${redis.host}"
    	p:port="${redis.port}"
    	p:password="${redis.pass}" 
    	p:pool-config-ref="poolConfig" >
        <property name="timeout" value="20000"></property>
        <property name="poolConfig" ref="poolConfig"></property>
    </bean>   
  	
  	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"  ref="connectionFactory" />  
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>  
        <property name="valueSerializer">  
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>  
        </property>  
    </bean>  
    
    <!-- 配置缓存 -->  
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">    
    	<property name="caches">    
        	<set>    
            	<bean class="com.rockies.redis.RedisCache">    
                	<property name="redisTemplate" ref="redisTemplate" />    
                    <property name="name" value="commonService.getUserById"/> 
                    <property name="timeout" value="${redis.timeout}" />         
                </bean> 
                <bean class="com.rockies.redis.RedisCache">  
                    <property name="redisTemplate" ref="redisTemplate" />  
                    <property name="name" value="commonService.getAllUsers" />  
                    <property name="timeout" value="${redis.timeout}" />  
                </bean>   
             </set>    
        </property>    
    </bean>


</beans>