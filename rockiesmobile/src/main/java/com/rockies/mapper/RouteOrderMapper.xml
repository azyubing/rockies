<?xml version="1.0" encoding="UTF-8" ?>
	<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rockies.mapper.RouteOrderMapper">
	<resultMap id="routeOrder" type="com.rockies.model.RouteOrder">
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="cus_no" property="cusNo" jdbcType="VARCHAR" />
		<result column="order_nm" property="orderNm" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="startdate" property="startdate" jdbcType="TIMESTAMP" />
		<result column="enddate" property="enddate" jdbcType="TIMESTAMP" />
		<result column="adult_cnt" property="adultCnt" jdbcType="INTEGER" />
		<result column="child_cnt" property="childCnt" jdbcType="INTEGER" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="oldAmount" property="oldAmount" jdbcType="DECIMAL" />
		<result column="prepay" property="prepay" jdbcType="DECIMAL" />
		<result column="evaluateflg" property="evaluateflg" jdbcType="VARCHAR" />
		<result column="del_flg" property="delFlg" jdbcType="VARCHAR" />
		<result column="bill_time" property="billTime" jdbcType="TIMESTAMP" />
		<result column="prepay_time" property="prepayTime" jdbcType="TIMESTAMP" />
		<result column="bill_time" property="allpayTime" jdbcType="TIMESTAMP" />
		<result column="ctdt" property="ctdt" jdbcType="TIMESTAMP" />
		<result column="ctuser" property="ctuser" jdbcType="VARCHAR" />
		<result column="updt" property="updt" jdbcType="TIMESTAMP" />
		<result column="upuser" property="upuser" jdbcType="VARCHAR" />
		<result column="routeJson" property="routeJson" jdbcType="VARCHAR" />
		<result column="ping_orderid" property="pingOrderNo" jdbcType="VARCHAR" />
		<result column="travelPartners" property="travelPartners" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		`order_no`,`cus_no`,`order_nm`,
		`status`,`startdate`,`enddate`,`adult_cnt`,`child_cnt`,`amount`,`prepay`,`evaluateflg`,
		`del_flg`,`bill_time`,`prepay_time`,`allpay_time`,`ctdt`,`ctuser`,`updt`,`upuser`,`routeJson`,`oldAmount`
	</sql>

	<insert id="saveRouteOrder" parameterType="com.rockies.model.RouteOrder">
		<selectKey keyProperty="orderNo" resultType="String" order="BEFORE">
			select CONCAT(date_format(now(), '%Y%m%d'), FLOOR(0 + RAND() * (9999999999)));
		</selectKey>
		INSERT INTO route_order (
		<include refid="Base_Column_List" />
		)
		VALUES (#{orderNo},#{cusNo},#{orderNm},
		#{status},#{startdate},#{enddate},#{adultCnt},#{childCnt},#{amount},#{prepay},#{evaluateflg},
		#{delFlg},#{billTime},#{prepayTime},#{allpayTime},#{ctdt},#{ctuser},#{updt},#{upuser},#{routeJson},#{oldAmount}
		);
	</insert>

	<insert id="saveRouteOrderHasOrderNo" parameterType="com.rockies.model.RouteOrder">
		INSERT INTO route_order (
		<include refid="Base_Column_List" />
		)
		VALUES (#{orderNo},#{cusNo},#{orderNm},
		#{status},#{startdate},#{enddate},#{adultCnt},#{childCnt},#{amount},#{prepay},#{evaluateflg},
		#{delFlg},#{billTime},#{prepayTime},#{allpayTime},#{ctdt},#{ctuser},#{updt},#{upuser},#{routeJson},#{oldAmount}
		);
	</insert>

	<select id="getRouteOrderList" parameterType="Map" resultType="Map">
		SELECT
		r.`order_no`,r.order_nm,r.`ctdt`,r.`updt`,r.`amount`,r.`oldAmount`,r.`status`,
		u.`username`, ,r.`ctdt`,r.`updt`
		FROM route_order r LEFT JOIN USER u ON
		r.`cus_no` = u.`id`
		where r.`del_flg`=0
		<if test="orderNo!=null and orderNo!=''">
			and r.`order_no`=#{orderNo}
		</if>
		<if test="status!=null and status!=''">
			and r.`status`=#{status}
		</if>
		<if test="offset !=null and limit != null">
			limit #{offset},#{limit};
		</if>
	</select>

	<select id="getRouteOrderCount" parameterType="Map"
		resultType="java.lang.Integer">
		SELECT count(*)
		FROM route_order r LEFT JOIN customer c ON r.`cus_no` =
		c.`id`
		where r.`del_flg`=0
		<if test="orderNo!=null and orderNo!=''">
			and r.`order_no`=#{orderNo}
		</if>
		<if test="status!=null and status!=''">
			and r.`status`=#{status}
		</if>
	</select>

	<select id="getRouteOrder" parameterType="map" resultMap="routeOrder">
		SELECT
		*,
		(SELECT
		COUNT(1)
		FROM
		book_cus_info bookcus
		WHERE
		route_order.order_no = bookcus.order_no) AS travelPartners
		FROM
		route_order
		where order_no=#{orderNo} and del_flg='0'
		<if test="status!=null and status!=''">
			and status = #{status}
		</if>
	</select>

	<select id="getLatestOrderByUser" parameterType="Map" resultMap="routeOrder">
		SELECT r.* FROM route_order r where r.updt = (select
		max(updt) from
		route_order where cus_no = r.cus_no and
		cus_no=#{cusNo})
	</select>

	<select id="getRouteStatusCount" resultType="java.lang.Long"
		parameterType="java.lang.String">
		SELECT count(*) FROM route_order where status =
		#{status} and del_flg='0'
	</select>

	<select id="getMyorder" parameterType="map" resultType="Map">
		SELECT rp.percent, startCity.startCityName,startCity.startCountryName,
		endcity.endCityName,endcity.endCountryName,
		(select count(1) from
		book_cus_info where ro.order_no = order_no) as
		travelPartners,
		ro.*
		FROM
		route_order ro
		LEFT JOIN
		(SELECT nokT.order_no
		AS order_no, CONCAT(
		ROUND((isOk.isOk/nokT.allc)*100,2),'%') AS percent
		FROM
		(SELECT
		COUNT(*)
		AS isOk, order_no FROM product_order WHERE
		confirm_status =
		0
		GROUP BY
		order_no) isOk
		LEFT JOIN
		(SELECT COUNT(*) AS
		allc, order_no
		FROM
		product_order GROUP BY order_no) nokT
		ON
		isOk.order_no =
		nokT.order_no
		)
		rp ON ro.`order_no`=rp.order_no AND
		ro.`del_flg`=0
		LEFT
		JOIN (
		SELECT
		ro.`order_no`, c.`cityName` AS
		endCityName,MAX(po.`enddate`),cc.`cityName` AS endCountryName
		FROM
		route_order ro
		LEFT JOIN product_order po ON ro.`order_no` =
		po.`order_no` LEFT JOIN city
		c ON po.`city`=c.`id`
		LEFT JOIN city cc ON
		c.`parentId`=cc.`id`
		GROUP BY ro.`order_no` ORDER BY po.inday DESC
		)
		endcity ON endcity.order_no=ro.order_no
		LEFT JOIN (
		SELECT
		ro.`order_no`, c.`cityName` AS
		startCityName,MIN(po.`startdate`),cc.`cityName` AS startCountryName
		FROM route_order ro
		LEFT JOIN product_order po ON ro.`order_no` =
		po.`order_no` LEFT JOIN city
		c ON po.`city`=c.`id`
		LEFT JOIN city cc ON
		c.`parentId`=cc.`id`
		GROUP BY ro.`order_no` ORDER BY po.inday DESC
		)
		startCity ON startCity.order_no=ro.order_no
		WHERE ro.`del_flg`=0 and
		cus_no=#{cusNo}
		<if test="status!=null and status!=''">
			and ro.status = #{status}
		</if>
		<if test="orderNo!=null and orderNo!=''">
			and ro.order_no = #{orderNo}
		</if>
		ORDER BY ro.`ctdt` DESC
		<if test="offset !=null and limit != null">
			limit #{offset},#{limit};
		</if>
	</select>

	<!-- 通过订单ID 查询行程单信息 -->
	<select id="getMyPayRouteOrderByOrderNo" parameterType="Map"
		resultMap="routeOrder">
		select * from route_order
		where
		order_no = #{orderNo}
		<!-- and status in (1,3) -->
	</select>

	<!-- 通过订单ID 查询行程单关联的产品信息 -->
	<select id="getMyPayByOrderNo" parameterType="Map" resultType="Map">
		select * from product_order
		where
		order_no = #{orderNo}
		<![CDATA[and startdate <= #{inday} ]]>
		and enddate >= #{inday}

	</select>

	<!-- 通过订单ID 查询行程单关联的产品信息详情 -->
	<select id="getMyPayDetailByOrderNo" parameterType="Map"
		resultType="Map">
   		<![CDATA[ select allR.* from 
			(select pr.order_no,DATE_FORMAT(DATE_ADD(pr.startdate,INTERVAL rd.pday-1 DAY),'%Y-%m-%d') atdate,
			       DATE_FORMAT(pr.startdate, '%Y-%m-%d') pr_startdate,DATE_FORMAT(pr.enddate, '%Y-%m-%d') pr_enddate,
				   pr.pname,pr.pid,pr.ptype, rd.itype itype,
				   rd.title,rd.starttime attime,rd.pday,
			       pod.prepay_amount,pod.amount,pr.confirm_time,pr.confirm_img,pr.confirm_status
			 from product_order pr
			 inner join route_detail rd on rd.pid = pr.pid
			 inner join (select order_no,pid ,sum(prepay_amount) prepay_amount,sum(amount) amount 
			              from product_order_detail where order_no = #{orderNo} group by pid ) pod 
			         on pod.order_no = pr.order_no and pod.pid = pr.pid
			where pr.order_no = #{orderNo} and pr.ptype = '0'
			union all
			select pr.order_no,DATE_FORMAT(pr.startdate,'%Y-%m-%d') atdate,
			       DATE_FORMAT(pr.startdate, '%Y-%m-%d') pr_startdate,DATE_FORMAT(pr.enddate, '%Y-%m-%d') pr_enddate,
				   pr.pname,pr.pid,pr.ptype,'1' itype,
				   pr.pname title,pr.attime attime,'' pday,
			       pod.prepay_amount,pod.amount,pr.confirm_time,pr.confirm_img,pr.confirm_status
			 from product_order pr
			 inner join (select order_no,pid,runing_no, sum(prepay_amount) prepay_amount,sum(amount) amount 
			              from product_order_detail where order_no = #{orderNo} group by order_no,pid,runing_no ) pod 
			         on pod.order_no = pr.order_no and pod.pid = pr.pid and pod.runing_no=pr.runing_no
			where pr.order_no = #{orderNo} and pr.ptype = '1'
			union all
			select pr.order_no,DATE_FORMAT(dh.idate,'%Y-%m-%d') atdate,
				   DATE_FORMAT(pr.startdate, '%Y-%m-%d') pr_startdate,DATE_FORMAT(pr.enddate, '%Y-%m-%d') pr_enddate,
				   if(DATE_FORMAT(dh.idate,'%Y-%m-%d')=DATE_FORMAT(pr.enddate, '%Y-%m-%d'),CONCAT('退房-',pr.pname),pr.pname) pname,
				   pr.pid,pr.ptype,'2' itype,
				   pr.pname title,
				   if(DATE_FORMAT(dh.idate,'%Y-%m-%d')=DATE_FORMAT(pr.enddate, '%Y-%m-%d'),'10:00',pr.attime) attime,
					'' pday,
				   pod.prepay_amount,
				   if(DATE_FORMAT(dh.idate,'%Y-%m-%d')=DATE_FORMAT(pr.enddate, '%Y-%m-%d'),0,pod.amount) amount,
				   pr.confirm_time,pr.confirm_img,pr.confirm_status
			 from product_order pr 
			 inner join date_help dh on DATE_FORMAT(pr.startdate,'%Y-%m-%d') <= DATE_FORMAT(dh.idate,'%Y-%m-%d') and DATE_FORMAT(pr.enddate,'%Y-%m-%d') >= DATE_FORMAT(dh.idate,'%Y-%m-%d')
			 inner join (select order_no,pid,runing_no, sum(unit_prepay) prepay_amount,sum(unit_price) amount 
			              from product_order_detail where order_no = #{orderNo} group by order_no,pid,runing_no ) pod 
			         on pod.order_no = pr.order_no and pod.pid = pr.pid and pod.runing_no=pr.runing_no
			where pr.order_no = #{orderNo} and pr.ptype = '2'
			union all
			select pr.order_no,DATE_FORMAT(pr.startdate,'%Y-%m-%d') atdate,
			       DATE_FORMAT(pr.startdate, '%Y-%m-%d') pr_startdate,DATE_FORMAT(pr.enddate, '%Y-%m-%d') pr_enddate,
				   pr.pname,pr.pid,pr.ptype,'1' itype,
				   pr.pname title,pr.attime attime,'' pday,
			       pod.prepay_amount,pod.amount,pr.confirm_time,pr.confirm_img,pr.confirm_status
			 from product_order pr
			 inner join (select order_no,pid,runing_no, sum(prepay_amount) prepay_amount,sum(amount) amount 
			              from product_order_detail where order_no = #{orderNo} group by order_no,pid,runing_no ) pod 
			         on pod.order_no = pr.order_no and pod.pid = pr.pid and pod.runing_no=pr.runing_no
			where pr.order_no = #{orderNo} and pr.ptype = '3'
			union all
			select pr.order_no,DATE_FORMAT(DATE_ADD(pr.startdate,INTERVAL rd.pday-1 DAY),'%Y-%m-%d') atdate,
			       DATE_FORMAT(pr.startdate, '%Y-%m-%d') pr_startdate,DATE_FORMAT(pr.enddate, '%Y-%m-%d') pr_enddate,
				   pr.pname,pr.pid,pr.ptype, rd.itype itype,
				   rd.title,rd.starttime attime,rd.pday,
				   if(mt.mintime = rd.starttime,pod.prepay_amount,0 ) prepay_amount,
				   if(mt.mintime = rd.starttime,pod.amount,0 ) amount,pr.confirm_time,pr.confirm_img,pr.confirm_status
			 from product_order pr
			 inner join ent_route_detail rd on rd.pid = pr.pid
			 left join (select order_no,pid,runing_no, sum(prepay_amount) prepay_amount,sum(amount) amount 
			             from product_order_detail where order_no = #{orderNo} group by order_no,pid,runing_no ) pod 
			        on pod.order_no = pr.order_no and pod.pid = pr.pid and pod.runing_no=pr.runing_no
			 left join (select pid,MIN(starttime) mintime from ent_route_detail group by pid) mt on mt.pid = pr.pid
			where pr.order_no = #{orderNo} and pr.ptype = '4'
			) allR
			order by atdate,attime ]]>
	</select>

	<select id="getMyorderCount" parameterType="Map" resultType="java.lang.Integer">
		SELECT count(*)
		FROM route_order r LEFT JOIN customer c ON r.`cus_no` =
		c.`id`
		where r.`del_flg`=0 and r.cus_no=#{cusNo}
		<if test="orderNo!=null and orderNo!=''">
			and r.`order_no`=#{orderNo}
		</if>
		<if test="status!=null and status!=''">
			and r.status = #{status}
		</if>
	</select>


	<delete id="deleteRouteOrder" parameterType="java.lang.String">
		delete from
		route_order where order_no=#{orderNo}
	</delete>

	<update id="updateRouteUser" parameterType="Map">
		update route_order
		set
		routeUsername=#{routeUsername},routeTel=#{routeTel},routeEmail=#{routeEmail}
		where order_no=#{orderNo}
	</update>

	<!-- 保存支付单号 -->
	<update id="updateRouteStartPay" parameterType="Map">
		update
		route_order set ping_orderid=#{ping_orderid} where
		order_no=#{orderno}
	</update>

	<!-- status=2 付款成功（待确认） -->
	<update id="updateRoutePaySuccess" parameterType="Map">
		update
		route_order set status=2,prepay_time=now(),allpay_time=now() where
		ping_orderid=#{ping_orderid}
	</update>

	<update id="updateProductSaleCnt" parameterType="Map">
		update product
		set sale_cnt=IFNULL(sale_cnt,0) + 1
		where pid in (select pid from
		product_order where order_no in (select
		order_no from route_order where
		ping_orderid=#{ping_orderid}))
	</update>

	<!-- 修改状态 -->
	<update id="updateStatus" parameterType="Map">
		update route_order
		set
		status=#{status} where order_no=#{orderNo}
	</update>

	<!-- status=8 支付中 -->
	<update id="updateRoutePaying" parameterType="Map">
		update route_order
		set status=8 where ping_orderid=#{ping_orderid}
	</update>


	<!-- status=9 已退款 -->
	<update id="updateRouteRefundSuccess" parameterType="Map">
		update
		route_order set status=9,refund_time=now() where
		ping_orderid=#{ping_orderid}
	</update>
</mapper>