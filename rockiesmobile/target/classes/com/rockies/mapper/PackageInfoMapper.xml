<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rockies.mapper.PackageInfoMapper" >

  <sql id="selectPackageList">
  	    from package as package
		left join product as p on package.pid = p.pid
		left join city as c on p.country = c.id
		left join city as city on p.city = city.id
		/* left join package_price as pp on pp.pid = p.pid */
		/* left join (select pid,sum(if(ordercnt=null,0,ordercnt)) cnt from product_order_detail group by pid) as pod on pod.pid = p.pid */
		<if test="themeIds !=null and themeIds != ''">
			 left join themeproduct as tp on tp.productId = p.pid
		</if>
	    <where>
	    	p.del_flg=0 and p.pstatus = 1
	    	<if test="pid != null and pid != ''">
			  and p.pid = #{pid,jdbcType=VARCHAR}
			</if>
	    	<if test="pname !=null and pname != ''">
			  and (
				 match(pname,tags) against(#{pname,jdbcType=VARCHAR})
				or match(c.cityname) against(#{pname,jdbcType=VARCHAR})
				or match(city.cityname) against(#{pname,jdbcType=VARCHAR})
			  )
			</if>
			<if test="country !=null and country != ''">
			  and p.country = #{country,jdbcType=VARCHAR}
			</if>
			<if test="cities !=null and cities != ''">
			  and p.city in
			  	<foreach item="item" index="index" collection="cities"
						 open="(" separator="," close=")">
						#{item}
				</foreach>
			</if>
			<if test="city !=null and city != ''">
			  and p.city = #{city,jdbcType=VARCHAR}
			</if>
			<if test="tags !=null and tags != ''">
			  and match(tags) against(#{tags,jdbcType=VARCHAR})
			</if>
			<if test="themeIds !=null and themeIds != ''">
			  and tp.themeId in 
				<foreach item="item" index="index" collection="themeIds"
						 open="(" separator="," close=")">
						#{item}
				</foreach>
			</if>
			<if test="startTime !=null and startTime != ''">
			  and p.startdate >= #{startTime,jdbcType=VARCHAR}
			</if>
			<choose>
				<when test="endTime !=null and endTime != ''">
					and	p.enddate <![CDATA[   >=  ]]>  #{endTime,jdbcType=VARCHAR} and p.enddate <![CDATA[   >=  ]]> date_format(SYSDATE(),'%Y-%m-%d')
				</when>
				<when test="endTime ==null or endTime == ''">
					and p.enddate <![CDATA[   >=  ]]> curdate()
				</when>
			</choose>
			<if test="property !=null and property != ''">
			  and package.property = #{property,jdbcType=VARCHAR}
			</if>
			<if test="daycnt !=null and daycnt != ''">
			  and package.daycnt = #{daycnt,jdbcType=VARCHAR}
			</if>
			<if test="staylvl !=null and staylvl != ''">
			  and package.staylvl = #{staylvl,jdbcType=VARCHAR}
			</if>
			<choose>
				<when test="minPrice !=null and minPrice != '' and ( maxPrice ==null or maxPrice == '' ) ">
					and p.start_price = #{minPrice,jdbcType=VARCHAR}
				</when>
				<when test="maxPrice !=null and maxPrice != '' and ( minPrice ==null or minPrice == '' ) ">
					and p.start_price = #{maxPrice,jdbcType=VARCHAR}
				</when>
				<when test="maxPrice !=null and maxPrice != '' and minPrice !=null and minPrice != '' ">
					and p.start_price between #{minPrice,jdbcType=VARCHAR} and #{maxPrice,jdbcType=VARCHAR} 
				</when>
			</choose>
			<if test="ptype !=null and ptype != ''">
			  and p.ptype = #{ptype,jdbcType=VARCHAR}
			</if>
	    </where>
	    group by p.pid
			<if test="cnt == 1">
			  order by p.sale_cnt
			</if>
			<if test="cnt == 2">
			  order by p.sale_cnt desc
			</if>
			<if test="orderPrice == 1">
			  order by start_price
			</if>
			<if test="orderPrice == 2">
			  order by start_price desc
			</if>
	
	    	<if test="offset!=null and limit != ''">
			  limit #{offset},#{limit};
			</if>
  </sql>

  <select id="selectByPrimaryKey" resultType="com.rockies.model.PackageInfo" parameterType="java.lang.String" >
    select *
    from package
    where pid = #{pid,jdbcType=VARCHAR}
  </select>
  <select id="selectAllListByParam" resultType="com.rockies.model.PackageInfo" parameterType="Map" >
    select package.*,
    	   p.*,
    	   c.cityName 
    from package as package
	left join product as p on package.pid = p.pid
	left join city as c on p.country = c.id
    <where>
    	package.del_flg=0
    	<if test="pid != null and pid != ''">
		  and p.pid = #{pid,jdbcType=VARCHAR}
		</if>
    	<if test="pname!=null and pname != ''">
		  and p.pname like "%"#{pname,jdbcType=VARCHAR}"%" 
		</if>
    </where>
    order by package.ctdt desc
    	<if test="offset!=null and limit != ''">
		  limit #{offset},#{limit};
		</if>
	
  </select>
  <select id="getCount"  parameterType="Map" resultType="java.lang.Integer" >
	select  count(*) from package as package
	left join product as p on package.pid = p.pid
	<where>
		package.del_flg=0
    	<if test="pid != null and pid != ''">
		  and p.pid = #{pid,jdbcType=VARCHAR}
		</if>
    	<if test="pname!=null and pname != ''">
		  and p.pname like "%"#{pname,jdbcType=VARCHAR}"%" 
		</if>
    </where>
  </select>
  
  <select id="getPackageCount"  resultType="java.lang.Integer" >
  	select  count(*) from package as v
	LEFT JOIN product as p on(v.pid = p.pid)
	where
		v.del_flg=0
    	and p.del_flg = 0	
		and p.pstatus = 1
		and p.enddate >= DATE_FORMAT(NOW(),'%Y-%m-%d')
  </select>
  
  <select id="selectPackageInfoByParam" resultType="com.rockies.model.PackageInfo" parameterType="Map" >
    select * from package as package
	left join product as p on package.pid = p.pid
    <where>
    	<if test="pid != null and pid != ''">
		  and p.pid = #{pid,jdbcType=VARCHAR}
		</if>
    </where>
  </select>
  <select id="selectPackageListByParam" resultType="Map" parameterType="Map" >
    select /* if(pod.cnt=null,0,pod.cnt) cnt, */
    	   package.*,
    	   p.*,
    	/*    pp.*, */
    	   c.cityName as countryName ,
		   city.cityName as cityName
    <include refid="selectPackageList"></include>
  </select>
  
  <select id="getPackageListCount" parameterType="Map" resultType="java.lang.Integer">
       select count(DISTINCT p.pid)
     from package as package
		left join product as p on package.pid = p.pid
		left join city as c on p.country = c.id
		left join city as city on p.city = city.id
	
		<if test="themeIds !=null and themeIds != ''">
			 left join themeproduct as tp on tp.productId = p.pid
		</if>
	    <where>
	    	p.del_flg=0 and p.pstatus = 1
	    	<if test="pid != null and pid != ''">
			  and p.pid = #{pid,jdbcType=VARCHAR}
			</if>
	    	<if test="pname !=null and pname != ''">
			  and (
				 match(pname,tags) against(#{pname,jdbcType=VARCHAR})
				or match(c.cityname) against(#{pname,jdbcType=VARCHAR})
				or match(city.cityname) against(#{pname,jdbcType=VARCHAR})
			  )
			</if>
			<if test="country !=null and country != ''">
			  and p.country = #{country,jdbcType=VARCHAR}
			</if>
			<if test="city !=null and city != ''">
			  and p.city = #{city,jdbcType=VARCHAR}
			</if>
			<if test="tags !=null and tags != ''">
			  and match(tags) against(#{tags,jdbcType=VARCHAR})
			</if>
			<if test="themeIds !=null and themeIds != ''">
			  and tp.themeId in 
				<foreach item="item" index="index" collection="themeIds"
						 open="(" separator="," close=")">
						#{item}
				</foreach>
			</if>
			<if test="startTime !=null and startTime != ''">
			  and p.startdate >= #{startTime,jdbcType=VARCHAR}
			</if>
			<choose>
				<when test="endTime !=null and endTime != ''">
					and	p.enddate <![CDATA[   >=  ]]>  #{endTime,jdbcType=VARCHAR} and p.enddate <![CDATA[   >=  ]]> date_format(SYSDATE(),'%Y-%m-%d')
				</when>
				<when test="endTime ==null or endTime == ''">
					and p.enddate <![CDATA[   >=  ]]> curdate()
				</when>
			</choose>
			<if test="property !=null and property != ''">
			  and package.property = #{property,jdbcType=VARCHAR}
			</if>
			<if test="daycnt !=null and daycnt != ''">
			  and package.daycnt = #{daycnt,jdbcType=VARCHAR}
			</if>
			<if test="staylvl !=null and staylvl != ''">
			  and package.staylvl = #{staylvl,jdbcType=VARCHAR}
			</if>
			<choose>
				<when test="minPrice !=null and minPrice != '' and ( maxPrice ==null or maxPrice == '' ) ">
					and p.start_price = #{minPrice,jdbcType=VARCHAR}
				</when>
				<when test="maxPrice !=null and maxPrice != '' and ( minPrice ==null or minPrice == '' ) ">
					and p.start_price = #{maxPrice,jdbcType=VARCHAR}
				</when>
				<when test="maxPrice !=null and maxPrice != '' and minPrice !=null and minPrice != '' ">
					and p.start_price between #{minPrice,jdbcType=VARCHAR} and #{maxPrice,jdbcType=VARCHAR} 
				</when>
			</choose>
			<if test="ptype !=null and ptype != ''">
			  and p.ptype = #{ptype,jdbcType=VARCHAR}
			</if>
	    </where>
  </select>
  
  <select id="countPackageListByParam" resultType="java.lang.Integer" parameterType="Map" >
  	select count(*) from (
	    select package.pid
	     from package as package
		left join product as p on package.pid = p.pid
		left join city as c on p.country = c.id
		left join city as city on p.city = city.id
		<if test="themeIds !=null and themeIds != ''">
			 left join themeproduct as tp on tp.productId = p.pid
		</if>
	    <where>
	    	p.del_flg=0 and p.pstatus = 1
	    	<if test="pid != null and pid != ''">
			  and p.pid = #{pid,jdbcType=VARCHAR}
			</if>
	    	<if test="pname !=null and pname != ''">
			  and (
				 match(pname,tags) against(#{pname,jdbcType=VARCHAR})
				or match(c.cityname) against(#{pname,jdbcType=VARCHAR})
				or match(city.cityname) against(#{pname,jdbcType=VARCHAR})
			  )
			</if>
			<if test="country !=null and country != ''">
			  and p.country = #{country,jdbcType=VARCHAR}
			</if>
			<if test="city !=null and city != ''">
			  and p.city = #{city,jdbcType=VARCHAR}
			</if>
			<if test="tags !=null and tags != ''">
			  and match(tags) against(#{tags,jdbcType=VARCHAR})
			</if>
			<if test="themeIds !=null and themeIds != ''">
			  and tp.themeId in 
				<foreach item="item" index="index" collection="themeIds"
						 open="(" separator="," close=")">
						#{item}
				</foreach>
			</if>
			<if test="startTime !=null and startTime != ''">
			  and p.startdate >= #{startTime,jdbcType=VARCHAR}
			</if>
			<choose>
				<when test="endTime !=null and endTime != ''">
					and	p.enddate <![CDATA[   >=  ]]>  #{endTime,jdbcType=VARCHAR} and p.enddate <![CDATA[   >=  ]]> date_format(SYSDATE(),'%Y-%m-%d')
				</when>
				<when test="endTime ==null or endTime == ''">
					and p.enddate <![CDATA[   >=  ]]> curdate()
				</when>
			</choose>
			<if test="property !=null and property != ''">
			  and package.property = #{property,jdbcType=VARCHAR}
			</if>
			<if test="daycnt !=null and daycnt != ''">
			  and package.daycnt = #{daycnt,jdbcType=VARCHAR}
			</if>
			<if test="staylvl !=null and staylvl != ''">
			  and package.staylvl = #{staylvl,jdbcType=VARCHAR}
			</if>
			<choose>
				<when test="minPrice !=null and minPrice != '' and ( maxPrice ==null or maxPrice == '' ) ">
					and p.start_price = #{minPrice,jdbcType=VARCHAR}
				</when>
				<when test="maxPrice !=null and maxPrice != '' and ( minPrice ==null or minPrice == '' ) ">
					and p.start_price = #{maxPrice,jdbcType=VARCHAR}
				</when>
				<when test="maxPrice !=null and maxPrice != '' and minPrice !=null and minPrice != '' ">
					and p.start_price between #{minPrice,jdbcType=VARCHAR} and #{maxPrice,jdbcType=VARCHAR} 
				</when>
			</choose>
			<if test="ptype !=null and ptype != ''">
			  and p.ptype = #{ptype,jdbcType=VARCHAR}
			</if>
	    </where>
	    group by p.pid
			<if test="cnt == 1">
			  order by p.sale_cnt
			</if>
			<if test="cnt == 2">
			  order by p.sale_cnt desc
			</if>
			<if test="orderPrice == 1">
			  order by start_price
			</if>
			<if test="orderPrice == 2">
			  order by start_price desc
			</if>
	
	    	<if test="offset!=null and limit != ''">
			  limit #{offset},#{limit};
			</if>
    ) as t1 
  </select>
  <!-- 包含天数-->
  <select id="selectDaycnt" resultType="Map" parameterType="Map" >
  	select max(daycnt) as daycnt from package 
  </select>
  <!-- 住宿等级-->
  <select id="selectStaylvl" resultType="Map" parameterType="Map" >
  	select distinct staylvl from package  
  </select>
  <!-- 套餐性质-->
  <select id="selectProperty" resultType="Map" parameterType="Map" >
  	select distinct property from package  
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from package
    where pid = #{pid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.rockies.model.PackageInfo" >
    insert into package (pid, topic, sub_topic, 
      daycnt, staylvl, property, 
      peoplecnt, ctdt, ctuser, 
      updt, upuser, del_flg)
    values (#{pid,jdbcType=VARCHAR}, #{topic,jdbcType=VARCHAR}, #{sub_topic,jdbcType=VARCHAR}, 
      #{daycnt,jdbcType=INTEGER}, #{staylvl,jdbcType=INTEGER}, #{property,jdbcType=VARCHAR}, 
      #{peoplecnt,jdbcType=INTEGER}, #{ctdt,jdbcType=TIMESTAMP}, #{ctuser,jdbcType=VARCHAR}, 
      #{updt,jdbcType=TIMESTAMP}, #{upuser,jdbcType=VARCHAR},0)
  </insert>
  <insert id="insertSelective" parameterType="com.rockies.model.PackageInfo" >
    insert into package
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="topic != null" >
        topic,
      </if>
      <if test="sub_topic != null" >
        sub_topic,
      </if>
      <if test="daycnt != null" >
        daycnt,
      </if>
      <if test="staylvl != null" >
        staylvl,
      </if>
      <if test="property != null" >
        property,
      </if>
      <if test="peoplecnt != null" >
        peoplecnt,
      </if>
      <if test="ctdt != null" >
        ctdt,
      </if>
      <if test="ctuser != null" >
        ctuser,
      </if>
      <if test="updt != null" >
        updt,
      </if>
      <if test="upuser != null" >
        upuser,
      </if>
      del_flg
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="topic != null" >
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="sub_topic != null" >
        #{sub_topic,jdbcType=VARCHAR},
      </if>
      <if test="daycnt != null" >
        #{daycnt,jdbcType=INTEGER},
      </if>
      <if test="staylvl != null" >
        #{staylvl,jdbcType=INTEGER},
      </if>
      <if test="property != null" >
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="peoplecnt != null" >
        #{peoplecnt,jdbcType=INTEGER},
      </if>
      <if test="ctdt != null" >
        #{ctdt,jdbcType=TIMESTAMP},
      </if>
      <if test="ctuser != null" >
        #{ctuser,jdbcType=VARCHAR},
      </if>
      <if test="updt != null" >
        #{updt,jdbcType=TIMESTAMP},
      </if>
      <if test="upuser != null" >
        #{upuser,jdbcType=VARCHAR},
      </if>
      0
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rockies.model.PackageInfo" >
    update package
    <set >
      <if test="topic != null" >
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="sub_topic != null" >
        sub_topic = #{sub_topic,jdbcType=VARCHAR},
      </if>
      <if test="daycnt != null" >
        daycnt = #{daycnt,jdbcType=INTEGER},
      </if>
      <if test="staylvl != null" >
        staylvl = #{staylvl,jdbcType=INTEGER},
      </if>
      <if test="property != null" >
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="peoplecnt != null" >
        peoplecnt = #{peoplecnt,jdbcType=INTEGER},
      </if>
      <if test="ctdt != null" >
        ctdt = #{ctdt,jdbcType=TIMESTAMP},
      </if>
      <if test="ctuser != null" >
        ctuser = #{ctuser,jdbcType=VARCHAR},
      </if>
      <if test="updt != null" >
        updt = #{updt,jdbcType=TIMESTAMP},
      </if>
      <if test="upuser != null" >
        upuser = #{upuser,jdbcType=VARCHAR},
      </if>
      <if test="del_flg != null" >
        del_flg = #{del_flg,jdbcType=VARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rockies.model.PackageInfo" >
    update package
    set topic = #{topic,jdbcType=VARCHAR},
      sub_topic = #{sub_topic,jdbcType=VARCHAR},
      daycnt = #{daycnt,jdbcType=INTEGER},
      staylvl = #{staylvl,jdbcType=INTEGER},
      property = #{property,jdbcType=VARCHAR},
      peoplecnt = #{peoplecnt,jdbcType=INTEGER},
      ctdt = #{ctdt,jdbcType=TIMESTAMP},
      ctuser = #{ctuser,jdbcType=VARCHAR},
      updt = #{updt,jdbcType=TIMESTAMP},
      upuser = #{upuser,jdbcType=VARCHAR},
      del_flg = #{del_flg,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=VARCHAR}
  </update>
</mapper>